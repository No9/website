{"version":3,"sources":["webpack:///./src/components/wideBlogPost.js","webpack:///./src/components/blogPost.js","webpack:///./src/components/blogPostGrid.js","webpack:///./src/pages/blogs.js"],"names":["WideBlogPost","_ref","title","subtext","author","date","slug","image","react_default","a","createElement","gatsby_browser_entry","className","to","src","BlogPost","BlogPostGrid","generateBlogs","this","props","blogs","map","blog","blogPost","frontmatter","excerpt","replace","fields","render","Component","blogPostGrid","query","data","allMarkdownRemark","nodes","forEach","node","concat","blogPostGrid_BlogPostGrid","_3520700645","Blogs","layout","wideBlogPost","imagePath"],"mappings":"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","file":"component---src-pages-blogs-js-ce7971efd87419200f6b.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\n\nconst WideBlogPost = ({title, subtext, author, date, image, slug}) => (\n\n    <Link className=\"blog-link\" to={slug}>\n    <div className=\"wide-blog-container\">\n        <div className=\"wide-blog-image-container\">\n            <img className=\"wide-blog-image\" src={\"https://miro.medium.com/max/2800/1*AmrAV709WQFlXgs4R4zZEw.jpeg\"}/>\n        </div>\n        <h2 className=\"wide-blog-title\">{title}</h2>\n        <p className=\"wide-blog-subtext\">{subtext}</p>\n        <p className=\"wide-blog-author\">by {author}</p>\n        <p className=\"wide-blog-date\">Posted {date}</p>\n    </div>\n    </Link>\n)\n\nexport default WideBlogPost;","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\n\nconst BlogPost = ({title, subtext, author, date, slug}) => (\n\n    <Link className=\"blog-link\" to={slug}>\n    <div className=\"blog-container\">\n        <h2 className=\"blog-title\">{title}</h2>\n        <p className=\"blog-subtext\">{subtext}</p>\n        <p className=\"blog-author\">by {author}</p>\n        <p className=\"blog-date\">Posted {date}</p>\n    </div>\n    </Link>\n)\n\nexport default BlogPost;","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport BlogPost from \"../components/blogPost\";\n\nclass BlogPostGrid extends Component {\n\n    generateBlogs() {\n        const allBlogs = this.props.blogs.map(blog => {\n\n            return <BlogPost title={blog.frontmatter.title} subtext={blog.excerpt.replace(blog.frontmatter.title, \"\").replace(\"By \" + blog.frontmatter.author, \"\").replace(\"Posted\", \"\")} author={blog.frontmatter.author} date={blog.frontmatter.date} slug={blog.fields.slug}/>\n\n        });\n\n        return allBlogs;\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"blog-grid\">\n                    {this.generateBlogs()}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default () => (\n    <StaticQuery\n      query={graphql`\n      query {\n        allMarkdownRemark(\n          filter: {fileAbsolutePath: {regex: \"/blogs/\"}}\n          sort: {\n            fields: [frontmatter___date]\n            order: DESC\n          }\n          ) {\n          nodes {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              date(fromNow: true)\n              author\n            }\n            excerpt(pruneLength: 130)\n          }\n        }\n      }\n      `}\n      render={data => {\n        let blogs = [];\n        data.allMarkdownRemark.nodes.forEach(node => {\n            blogs = blogs.concat(node);\n        });\n\n\n        return <BlogPostGrid blogs={blogs}/>\n      }}\n    />\n  )\n","import React from \"react\"\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\n\nimport WideBlogPost from \"../components/wideBlogPost\";\nimport BlogPostGrid from \"../components/blogPostGrid\";\n\n\nconst Blogs = ({data}) => {\n    return (\n        <Layout title=\"Appsody - Blogs\">\n            <div className=\"container\">\n              <section className=\"blog-card-section\">\n                  <h2>Latest Blog</h2>\n                  <WideBlogPost image={data.allMarkdownRemark.nodes[0].frontmatter.imagePath} title={data.allMarkdownRemark.nodes[0].frontmatter.title} subtext={data.allMarkdownRemark.nodes[0].excerpt.replace(data.allMarkdownRemark.nodes[0].frontmatter.title, \"\")} author={data.allMarkdownRemark.nodes[0].frontmatter.author} date={data.allMarkdownRemark.nodes[0].frontmatter.date} slug={data.allMarkdownRemark.nodes[0].fields.slug}/>\n              </section>\n            </div>\n            <div className=\"container\">\n              <section className=\"all-blogs-section\">\n                    <h2>All Blogs</h2>\n                    <BlogPostGrid/>\n              </section>\n            </div>\n        </Layout>\n        )\n}\n\nexport const query = graphql`\nquery BlogsQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/blogs/\"}}\n      sort: {\n        fields: [frontmatter___date]\n        order: DESC\n      }\n      ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(fromNow: true)\n          author\n        }\n        excerpt(pruneLength: 450)\n      }\n    }\n  }\n`\n\nexport default Blogs;"],"sourceRoot":""}